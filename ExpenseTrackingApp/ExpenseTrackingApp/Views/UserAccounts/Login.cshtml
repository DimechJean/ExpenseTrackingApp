@model ExpenseTrackingApp.Models.UserAccount
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Login</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-horizontal">


		@if (TempData["notice"] != null)
		{	<div class="notice">
			<p style="color: crimson">@TempData["notice"]</p>
		</div>
		}

        <hr class="newstyle" />

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAcc, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAcc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAcc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordAcc, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordAcc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordAcc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submit" type="submit" value="Login" class="btn btn-default" />
				<input class="btn btn-default" type="button" value="Register" onclick =" location.href= '@Url.Action("Create", "UserAccounts")'" />
				<div id="socialLoginList">
					<p>
						<button onclick="location.replace('../UserAccounts/Facebook');" type="submit" class="btn btn-sm" title="Login With Facebook ">Login With Facebook</button>
					</p>
				</div>
			</div>
        </div>														  
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
